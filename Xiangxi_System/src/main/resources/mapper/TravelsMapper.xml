<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qjn.xiangxi_system.mapper.TravelsMapper">

    <resultMap id="BaseResultMap" type="com.qjn.xiangxi_system.pojo.Travels">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="cover" column="cover" jdbcType="VARCHAR"/>
        <result property="descr" column="descr" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="time" column="time" jdbcType="VARCHAR"/>
        <result property="readCount" column="read_count" jdbcType="INTEGER"/>
        <result property="startDate" column="start_date" jdbcType="VARCHAR"/>
        <result property="money" column="money" jdbcType="DECIMAL"/>
        <result property="inventory" column="inventory" jdbcType="VARCHAR"/>
        <result property="likeCount" column="like_count" jdbcType="INTEGER"/>
    </resultMap>

    <!-- 查询所有景点及其标签的结果映射 -->
    <resultMap id="TravelsVOMap" type="com.qjn.xiangxi_system.pojo.vo.TravelsVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="cover" column="cover"/>
        <result property="descr" column="descr"/>
        <result property="content" column="content"/>
        <result property="time" column="time"/>
        <result property="readCount" column="read_count"/>
        <result property="startDate" column="start_date"/>
        <result property="money" column="money"/>
        <result property="inventory" column="inventory"/>
        <result property="likeCount" column="like_count"/>
        <result property="heat" column="heat"/>
        <result property="tags" column="tags" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,cover,
        descr,content,time,
        read_count,start_date,money,inventory,like_count
    </sql>
    <!--减少库存-->
    <update id="reduceInventory">
        UPDATE travels SET inventory = inventory - #{quantity} WHERE id = #{travelId}
    </update>
    <!--释放库存-->
    <update id="releaseInventory">
        UPDATE travels SET inventory = inventory + #{quantity} WHERE id = #{travelid}
    </update>

    <!-- 批量删除 -->
    <delete id="deleteBatch">
        DELETE FROM travels WHERE id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <!-- 按热度排序查询所有景点 -->
    <select id="selectAllByHeat" resultType="com.qjn.xiangxi_system.pojo.vo.TravelsVO">
        SELECT
            t.id,
            t.title,
            t.cover,
            t.descr,
            t.content,
            t.time,
            t.read_count,
            t.start_date,
            t.money,
            t.inventory,
            t.like_count,
            (t.like_count * 0.3 + t.read_count * 0.2 + COALESCE(o.order_count, 0) * 0.5) AS heat
        FROM
            travels t
                LEFT JOIN
            (SELECT
                 travelId,
                 COUNT(*) AS order_count
             FROM
                 orders
             WHERE
                 `status` = '待支付' OR `status` = '已完成'
             GROUP BY
                 travelId) o
            ON
                t.id = o.travelId
        ORDER BY
            heat DESC
    </select>

    <!-- 查询景点的标签 -->
    <select id="selectTags" resultType="string">
        SELECT tag_name 
        FROM tags t 
        JOIN travels_tags tt ON t.tag_id = tt.tag_id 
        WHERE tt.travel_id = #{id}
    </select>

    <!-- 查询所有景点及其标签 -->
    <select id="SelectAll" resultMap="TravelsVOMap">
        SELECT 
            t.*,
            GROUP_CONCAT(tag.tag_name) as tags
        FROM 
            travels t
        LEFT JOIN 
            travels_tags tt ON t.id = tt.travel_id
        LEFT JOIN 
            tags tag ON tt.tag_id = tag.tag_id
        GROUP BY 
            t.id
    </select>

    <!-- 插入旅游商品和标签的关联关系 -->
    <insert id="insertTravelTags">
        INSERT INTO travels_tags (travel_id, tag_id) VALUES
        <foreach collection="tagIds" item="tagId" separator=",">
            (#{travelId}, #{tagId})
        </foreach>
    </insert>

    <!-- 根据标签名称查询标签ID -->
    <select id="getTagIdByName" resultType="java.lang.Integer">
        SELECT tag_id FROM tags WHERE tag_name = #{tagName}
    </select>


    <!-- 插入新标签 -->
    <insert id="insertTag" useGeneratedKeys="true" keyProperty="tagId">
        INSERT INTO tags (tag_name) VALUES (#{tagName})
    </insert>

    <!-- 删除商品的所有标签关联 -->
    <delete id="deleteTravelTags">
        DELETE FROM travels_tags WHERE travel_id = #{travelId}
    </delete>

    <!-- 批量删除商品的标签关联 -->
    <delete id="deleteBatchTravelTags">
        DELETE FROM travels_tags WHERE travel_id IN
        <foreach collection="travelIds" item="travelId" open="(" separator="," close=")">
            #{travelId}
        </foreach>
    </delete>

    <select id="selectAllWithTags" resultMap="TravelsVOMap">
        SELECT 
            t.*,
            GROUP_CONCAT(tag.tag_name) as tags
        FROM 
            travels t
        LEFT JOIN 
            travels_tags tt ON t.id = tt.travel_id
        LEFT JOIN 
            tags tag ON tt.tag_id = tag.tag_id
        <where>
            <if test="keyword != null and keyword != ''">
                AND (
                    t.title LIKE CONCAT('%', #{keyword}, '%')
                    OR t.descr LIKE CONCAT('%', #{keyword}, '%')
                )
            </if>
        </where>
        GROUP BY 
            t.id
        ORDER BY 
            t.id DESC
    </select>
    <select id="getInventory" resultType="java.lang.Integer">
        SELECT inventory FROM travels WHERE id = #{travelId}
    </select>


</mapper>
